{"version":3,"file":"cesiumCompare-suSkNOdN.js","sources":["../../cesiumCompare.js"],"sourcesContent":["\nimport { GlobeControls, TilesRenderer, CAMERA_FRAME, EnvironmentControls } from '3d-tiles-renderer';\nimport { Scene, WebGLRenderer, PerspectiveCamera, MathUtils, Sphere, TextureUtils, DirectionalLight, AmbientLight } from 'three';\nimport { estimateBytesUsed } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\nimport { KTX2Loader } from 'three/examples/jsm/loaders/KTX2Loader.js';\nimport { GLTFExtensionsPlugin } from '3d-tiles-renderer/plugins';\n\nconst url = '../data/tileset.json';\nconst threeContainer = document.getElementById( 'three-container' );\nconst cesiumContainer = document.getElementById( 'cesium-container' );\nconst threeStats = threeContainer.getElementsByClassName( 'stats' )[ 0 ];\nconst cesiumStats = cesiumContainer.getElementsByClassName( 'stats' )[ 0 ];\nlet cesiumViewer, threeViewer;\nlet cameraInitialized = false;\n\n( async () => {\n\n\tawait initThree();\n\tawait initCesium();\n\n\twindow.addEventListener( 'keydown', e => {\n\n\t\tif ( e.key === ' ' ) {\n\n\t\t\tdocument.body.classList.toggle( 'fullscreen' );\n\n\t\t}\n\n\t} );\n\n\tupdateFromHash();\n\tsetInterval( () => {\n\n\t\tconst { camera } = threeViewer;\n\t\tconst { position, rotation } = camera;\n\t\tconst data = [ ...position, rotation.x, rotation.y, rotation.z ].map( v => parseFloat( v.toFixed( 4 ) ) );\n\t\twindow.history.replaceState( undefined, undefined, `#${ JSON.stringify( data ) }` );\n\n\t}, 100 );\n\n\trender();\n\n} )();\n\nfunction updateFromHash() {\n\n\tconst hash = window.location.hash.replace( /^#/, '' );\n\tif ( ! hash ) return;\n\n\tconst [ x, y, z, ex, ey, ez ] = JSON.parse( unescape( hash ) );\n\n\tconst { camera } = threeViewer;\n\tcamera.position.set( x, y, z );\n\tcamera.rotation.set( ex, ey, ez );\n\tcameraInitialized = true;\n\n}\n\nfunction render() {\n\n\trequestAnimationFrame( render );\n\n\twindow.THREE_DATA = threeViewer;\n\twindow.CESIUM_DATA = cesiumViewer;\n\n\t// update three\n\tthreeViewer.update();\n\n\t// update cesium\n\tconst ellipsoid = threeViewer.tiles.ellipsoid;\n\tconst frame = ellipsoid.getCartographicFromObjectFrame( threeViewer.camera.matrixWorld, {}, CAMERA_FRAME );\n\n\t// update frustum\n\tcesiumViewer.camera.frustum.near = threeViewer.camera.near;\n\tcesiumViewer.camera.frustum.far = threeViewer.camera.far;\n\tcesiumViewer.camera.frustum.fov = vertFovToCesiumFov( threeViewer.camera.fov, threeViewer.camera.aspect ) * MathUtils.DEG2RAD;\n\n\t// set position\n\tcesiumViewer.camera.position.x = threeViewer.camera.position.x;\n\tcesiumViewer.camera.position.y = threeViewer.camera.position.y;\n\tcesiumViewer.camera.position.z = threeViewer.camera.position.z;\n\n\t// set rotation\n\tcesiumViewer.camera.setView( {\n\t\tdestination: cesiumViewer.position,\n\t\torientation: {\n\t\t\troll: frame.roll,\n\t\t\tpitch: frame.elevation,\n\t\t\theading: frame.azimuth,\n\t\t}\n\t} );\n\n\tcesiumViewer.update();\n\n\tlet shallowTilesLoaded, loadedGeometryTiles, allLoadedTiles;\n\tlet textureBytes, geometryBytes;\n\n\t// update three stats\n\tloadedGeometryTiles = 0;\n\ttextureBytes = 0;\n\tgeometryBytes = 0;\n\tthreeViewer.tiles.forEachLoadedModel( ( scene, tile ) => {\n\n\t\tloadedGeometryTiles ++;\n\n\t\tscene.traverse( c => {\n\n\t\t\tconst { geometry, material } = c;\n\t\t\tif ( geometry ) {\n\n\t\t\t\tgeometryBytes += estimateBytesUsed( c.geometry );\n\t\t\t\tfor ( const key in material ) {\n\n\t\t\t\t\tconst value = material[ key ];\n\t\t\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\t\t\tconst { format, type, image } = value;\n\t\t\t\t\t\tconst { width, height } = image;\n\n\t\t\t\t\t\tlet bytes = TextureUtils.getByteLength( width, height, format, type );\n\t\t\t\t\t\tbytes *= value.generateMipmaps ? 4 / 3 : 1;\n\t\t\t\t\t\ttextureBytes += bytes;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t} );\n\n\tshallowTilesLoaded = 0;\n\ttraverse( threeViewer.root, t => {\n\n\t\tif ( t.__hasRenderableContent && t.__loadingState !== 0 ) {\n\n\t\t\tshallowTilesLoaded ++;\n\t\t\treturn true;\n\n\t\t}\n\n\t} );\n\n\tallLoadedTiles = 0;\n\ttraverse( threeViewer.root, ( t, d ) => {\n\n\t\tif ( t.__hasContent && t.__loadingState !== 0 ) {\n\n\t\t\tallLoadedTiles ++;\n\n\t\t}\n\n\t} );\n\n\tclearStats( threeStats );\n\twriteStats( threeStats, 'visible tiles', threeViewer.tiles.visibleTiles.size );\n\twriteStats( threeStats, 'loaded tiles', allLoadedTiles );\n\twriteStats( threeStats, 'loaded geom tiles', loadedGeometryTiles );\n\twriteStats( threeStats, 'loaded subtree tiles', allLoadedTiles - loadedGeometryTiles );\n\twriteStats( threeStats, 'loaded layer 1 tiles', shallowTilesLoaded );\n\twriteStats( threeStats, 'total memory', ( threeViewer.tiles.lruCache.cachedBytes * 1e-6 ).toFixed( 3 ) + ' MB' );\n\twriteStats( threeStats, 'geometry memory', ( geometryBytes * 1e-6 ).toFixed( 3 ) + ' MB' );\n\twriteStats( threeStats, 'texture memory', ( textureBytes * 1e-6 ).toFixed( 3 ) + ' MB' );\n\n\t// update cesium stats\n\n\tshallowTilesLoaded = 0;\n\ttraverse( cesiumViewer.root, t => {\n\n\t\tif ( t._content && t._content.ready && t._content._model ) {\n\n\t\t\tshallowTilesLoaded ++;\n\t\t\treturn true;\n\n\t\t}\n\n\t} );\n\n\tallLoadedTiles = 0;\n\tgeometryBytes = 0;\n\ttextureBytes = 0;\n\ttraverse( cesiumViewer.root, ( t, d ) => {\n\n\t\tif ( t._content && t._content.ready ) {\n\n\t\t\t// cesium treats the root node has having content\n\t\t\tif ( d !== 0 ) {\n\n\t\t\t\tallLoadedTiles ++;\n\n\t\t\t}\n\n\t\t\tif ( t._content._model ) {\n\n\t\t\t\tgeometryBytes += t._content._model.statistics.geometryByteLength;\n\t\t\t\ttextureBytes += t._content._model.statistics.texturesByteLength;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tclearStats( cesiumStats );\n\twriteStats( cesiumStats, 'visible tiles', cesiumViewer.tiles.statistics.selected );\n\twriteStats( cesiumStats, 'loaded tiles', allLoadedTiles );\n\twriteStats( cesiumStats, 'loaded geom tiles', cesiumViewer.tiles.statistics.numberOfTilesWithContentReady );\n\twriteStats( cesiumStats, 'loaded subtree tiles', allLoadedTiles - cesiumViewer.tiles.statistics.numberOfTilesWithContentReady );\n\twriteStats( cesiumStats, 'loaded layer 1 tiles', shallowTilesLoaded );\n\twriteStats( cesiumStats, 'total memory', ( cesiumViewer.tiles.totalMemoryUsageInBytes * 1e-6 ).toFixed( 3 ) + ' MB' );\n\twriteStats( cesiumStats, 'geometry memory', ( geometryBytes * 1e-6 ).toFixed( 3 ) + ' MB' );\n\twriteStats( cesiumStats, 'texture memory', ( textureBytes * 1e-6 ).toFixed( 3 ) + ' MB' );\n\n}\n\nasync function initThree() {\n\n\t// renderer\n\tconst renderer = new WebGLRenderer( { antialias: true } );\n\trenderer.setClearColor( 0 );\n\tthreeContainer.appendChild( renderer.domElement );\n\n\t// adjustments to match cesium defaults\n\trenderer.domElement.style.imageRendering = 'pixelated';\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\n\t// scene\n\tconst scene = new Scene();\n\n\t// camera\n\tconst aspect = window.innerWidth / window.innerHeight;\n\tconst cesiumFov = 60;\n\tconst camera = new PerspectiveCamera( horizFovToVert( cesiumFov, aspect ), aspect, 0.1, 1e10 );\n\tcamera.position.set( - 1356736.6495227425, 5298502.86925096, 3271193.9085458643 );\n\tcamera.quaternion.set(\n\t\t0.27330445532852865,\n\t\t- 0.4460582045331912,\n\t\t- 0.821679716911258,\n\t\t0.2262281938283491,\n\t);\n\n\tconst dracoLoader = new DRACOLoader();\n\tdracoLoader.setDecoderPath( 'https://unpkg.com/three@0.153.0/examples/jsm/libs/draco/gltf/' );\n\n\tconst ktx2loader = new KTX2Loader();\n\tktx2loader.setTranscoderPath( 'https://unpkg.com/three@0.153.0/examples/jsm/libs/basis/' );\n\tktx2loader.detectSupport( renderer );\n\n\t// initialize tiles\n\tconst tiles = new TilesRenderer( url );\n\ttiles.registerPlugin( new GLTFExtensionsPlugin( {\n\t\trtc: true,\n\t\tdracoLoader: dracoLoader,\n\t\tktxLoader: ktx2loader,\n\t} ) );\n\n\ttiles.preprocessURL = url => unescape( url );\n\ttiles.lruCache.maxBytesSize = Infinity;\n\ttiles.lruCache.minBytesSize = 0;\n\ttiles.setResolutionFromRenderer( camera, renderer );\n\ttiles.setCamera( camera );\n\n\tlet controls;\n\ttiles.addEventListener( 'load-tile-set', () => {\n\n\t\t// position the camera based on the model\n\t\tconst sphere = new Sphere();\n\t\ttiles.getBoundingSphere( sphere );\n\n\t\tif ( sphere.center.distanceTo( camera.position ) > sphere.radius * 20 ) {\n\n\t\t\tcameraInitialized = false;\n\n\t\t}\n\n\t\tif ( ! cameraInitialized ) {\n\n\t\t\tcameraInitialized = true;\n\t\t\tcamera.position.copy( sphere.center );\n\n\t\t\tif ( camera.position.length() > 1e5 ) {\n\n\t\t\t\tconst offset = sphere.center.clone().normalize();\n\t\t\t\tcamera.position.addScaledVector( offset, sphere.radius );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.position.x += sphere.radius;\n\t\t\t\tcamera.position.y += sphere.radius;\n\t\t\t\tcamera.position.z += sphere.radius;\n\n\t\t\t}\n\n\t\t\tcamera.lookAt( sphere.center );\n\n\t\t}\n\n\t\tif ( ! controls ) {\n\n\t\t\tif ( camera.position.length() > 1e5 ) {\n\n\t\t\t\t// controls\n\t\t\t\tcontrols = new GlobeControls( scene, camera, renderer.domElement, null );\n\t\t\t\tcontrols.enableDamping = true;\n\t\t\t\tcontrols.adjustHeight = false;\n\t\t\t\tcontrols.setEllipsoid( tiles.ellipsoid, tiles.group );\n\n\t\t\t} else {\n\n\t\t\t\tcontrols = new EnvironmentControls( scene, camera, renderer.domElement, null );\n\t\t\t\tcontrols.enableDamping = true;\n\t\t\t\tcontrols.adjustHeight = false;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tscene.add( tiles.group );\n\n\t// lights\n\tconst dirLight = new DirectionalLight( 0xffffff, 2 );\n\tdirLight.position.set( 1, 2, 3 );\n\n\tconst ambLight = new AmbientLight( 0xffffff, 1 );\n\tscene.add( dirLight, ambLight );\n\n\t// position the camera\n\tconst lat = 0.5419733570174874;\n\tconst lon = 1.821470691863346;\n\tconst height = 553.1228538149635;\n\n\tconst roll = 0;\n\tconst pitch = - 0.5000321680050197;\n\tconst heading = 0;\n\n\ttiles.ellipsoid\n\t\t.getObjectFrame(\n\t\t\tlat, lon, height,\n\t\t\troll, pitch, heading,\n\t\t\tcamera.matrixWorld,\n\t\t\tCAMERA_FRAME,\n\t\t).decompose(\n\t\t\tcamera.position,\n\t\t\tcamera.quaternion,\n\t\t\tcamera.scale,\n\t\t);\n\n\t// resize listeners\n\tonWindowResize();\n\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\tthreeViewer = {\n\t\ttiles,\n\t\tcamera,\n\t\trenderer,\n\t\tscene,\n\t\tupdate,\n\t\tget root() {\n\n\t\t\treturn tiles.root;\n\n\t\t},\n\t};\n\n\tfunction onWindowResize() {\n\n\t\tconst cesiumFov = 60;\n\t\tconst element = renderer.domElement;\n\t\tconst aspect = element.clientWidth / element.clientHeight;\n\t\tcamera.aspect = aspect;\n\t\tcamera.fov = horizFovToVert( cesiumFov, aspect );\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( element.clientWidth, element.clientHeight, false );\n\n\t}\n\n\tfunction update() {\n\n\t\tonWindowResize();\n\n\t\tif ( controls ) {\n\n\t\t\tcontrols.update();\n\n\t\t}\n\n\t\t// update options\n\t\ttiles.setResolutionFromRenderer( camera, renderer );\n\t\ttiles.setCamera( camera );\n\n\t\t// update tiles\n\t\tcamera.updateMatrixWorld();\n\t\ttiles.update();\n\n\t\trenderer.render( scene, camera );\n\n\t}\n\n}\n\nasync function initCesium() {\n\n\t// initialize the viewer\n\tconst viewer = new Cesium.CesiumWidget( cesiumContainer );\n\tviewer.scene.terrainProvider = false;\n\tviewer.scene.skyBox.destroy();\n\tviewer.scene.skyBox = undefined;\n\tviewer.scene.sun.destroy();\n\tviewer.scene.sun = undefined;\n\tviewer.scene.backgroundColor = Cesium.Color.BLACK.clone();\n\tviewer.creditDisplay.container.style.display = 'none';\n\n\t// initialize the tile set\n\tconst tileset = await Cesium.Cesium3DTileset.fromUrl( url, {\n\t\t// loadSiblings: true,\n\t\tmaximumCacheOverflowBytes: 1e20,\n\t\tcacheBytes: 0,\n\t} );\n\tviewer.scene.primitives.add( tileset );\n\n\t// extract the quaternion\n\tconst camera = viewer.camera;\n\n\t// log the camera information for debugging\n\t// const { latitude, longitude, height } = camera.positionCartographic;\n\t// console.log( {\n\t// \tfov: camera.frustum.fov,\n\t// \tnear: camera.frustum.near,\n\t// \tfar: camera.frustum.far,\n\n\t// \troll: camera.roll,\n\t// \tpitch: camera.pitch,\n\t// \theading: camera.heading,\n\n\t// \tlatitude,\n\t// \tlongitude,\n\t// \theight,\n\t// } );\n\n\tcesiumViewer = {\n\t\ttiles: tileset,\n\t\tviewer,\n\t\tcamera,\n\t\tscene: viewer.scene,\n\t\tupdate: () => {},\n\t\tget root() {\n\n\t\t\tlet node = tileset._selectedTiles[ 0 ];\n\t\t\twhile ( node && node.parent ) node = node.parent;\n\t\t\treturn node || null;\n\n\t\t},\n\t};\n\n}\n\nfunction clearStats( target ) {\n\n\ttarget.innerHTML = '';\n\n}\n\nfunction writeStats( target, key, value ) {\n\n\ttarget.innerHTML += `<div name=\"${ key }\">${ value }</div>`;\n\n}\n\nfunction horizFovToVert( fov, aspect ) {\n\n\treturn MathUtils.RAD2DEG * 2 * Math.atan( Math.tan( MathUtils.DEG2RAD * fov / 2 ) / aspect );\n\n}\n\nfunction vertFovToCesiumFov( fov, aspect ) {\n\n\tif ( aspect < 1 ) return fov;\n\n\treturn MathUtils.RAD2DEG * 2 * Math.atan( Math.tan( MathUtils.DEG2RAD * fov / 2 ) * aspect );\n\n}\n\nfunction traverse( root, callback, depth = 0 ) {\n\n\tif ( root ) {\n\n\t\tif ( ! callback( root, depth ) && root.children ) {\n\n\t\t\troot.children.forEach( c => {\n\n\t\t\t\ttraverse( c, callback, depth + 1 );\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n}\n"],"names":["url","threeContainer","cesiumContainer","threeStats","cesiumStats","cesiumViewer","threeViewer","cameraInitialized","initThree","initCesium","updateFromHash","camera","position","rotation","data","v","render","hash","x","y","z","ex","ey","ez","frame","CAMERA_FRAME","vertFovToCesiumFov","MathUtils","shallowTilesLoaded","loadedGeometryTiles","allLoadedTiles","textureBytes","geometryBytes","scene","tile","c","geometry","material","estimateBytesUsed","key","value","format","type","image","width","height","bytes","TextureUtils","traverse","t","clearStats","writeStats","renderer","WebGLRenderer","Scene","aspect","cesiumFov","PerspectiveCamera","horizFovToVert","dracoLoader","DRACOLoader","ktx2loader","KTX2Loader","tiles","TilesRenderer","GLTFExtensionsPlugin","controls","sphere","Sphere","offset","GlobeControls","EnvironmentControls","dirLight","DirectionalLight","ambLight","AmbientLight","onWindowResize","update","element","viewer","tileset","node","target","fov","root","callback","depth"],"mappings":"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"}